# stage 1
FROM node:16 as builder

# use changes to package.json to force Docker not to use the cache
# when we change our application's nodejs dependencies:
COPY frontend/package.json /tmp/package.json
RUN cd /tmp && npm install
RUN mkdir -p /app/frontend && cp -a /tmp/node_modules /app/frontend

WORKDIR /app/frontend
COPY . .
# RUN npm install
RUN npm run build:staging

FROM nginx:alpine
COPY --from=builder /app/dist/whisper/ /usr/share/nginx/html/

COPY ./frontend/nginx-staging.conf /etc/nginx/conf.d/default.conf

EXPOSE 80

